services:
  traefik:
    image: traefik:v3.1
    container_name: traefik
    command:
      - "--accesslog=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.web.http.redirections.entryPoint.to=websecure"
      - "--entryPoints.web.http.redirections.entryPoint.scheme=https"
      - "--entryPoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=${TRAEFIK_ACME_EMAIL}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "letsencrypt:/letsencrypt"

  web:
    container_name: shelf-web
    expose:
      - "3000"
    image: ghcr.io/lex-unix/shelf-web:latest
    environment:
      - API=${WEB_API}
      - CLOUDINARY_CLOUD_NAME=${CLOUDINARY_CLOUD_NAME}
      - CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY}
      - CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET}
    depends_on:
      - server
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.shelf-web.entrypoints=websecure"
      - "traefik.http.routers.shelf-web.rule=Host(`shelf.lexunix.me`)"
      - "traefik.http.routers.shelf-web.tls.certresolver=myresolver"

  server:
    container_name: shelf-server
    image: ghcr.io/lex-unix/shelf-server:latest
    environment:
      - PGHOST=${PGHOST}
      - PGPORT=${PGPORT}
      - PGUSER=${PGUSER}
      - PGDATABASE=${PGDATABASE}
      - PGPASSWORD=${PGPASSWORD}
      - REDIS_URL=${REDIS_URL}
      - CORS_ORIGIN=${CORS_ORIGIN}
      - PORT=${SERVER_PORT}
      - HOST=${SERVER_HOST}
      - COOKIE_SECRET=${COOKIE_SECRET}
      - COOKIE_NAME=${COOKIE_NAME}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.shelf-server.entrypoints=websecure"
      - "traefik.http.routers.shelf-server.rule=Host(`api.shelf.lexunix.me`)"
      - "traefik.http.routers.shelf-server.tls.certresolver=myresolver"

  db:
    image: postgres:alpine
    restart: always
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./server/db/create-tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
      - ./server/db/create-triggers.sql:/docker-entrypoint-initdb.d/create_triggers.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.0.11-alpine
    restart: always
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - redis:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s

volumes:
  db-data:
  redis:
  letsencrypt:
